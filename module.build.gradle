if (isRunAlone.toBoolean()) {
    //作为独立app运行
    apply plugin: 'com.android.application'
} else {
    //作为组件运行
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("moduleName", project.getName())
            }
        }


    }

    dataBinding {
        enabled = true
    }

    sourceSets {
        main {
            // 单独调试与集成调试时使用不同的 AndroidManifest.xml 文件
            if (isRunAlone.toBoolean()) {
                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时，排除manifest文件夹下所有调试文件
                    exclude 'src/main/alone/*'
                }
            }
        }
    }

    buildTypes {
        debug {
            buildConfigField "Boolean", "ENVIRONMENT", "false"

        }
        release {
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "Boolean", "ENVIRONMENT", "true"
        }
    }

}

dependencies {
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':base')
    kapt 'com.alibaba:arouter-compiler:1.1.4'

}
